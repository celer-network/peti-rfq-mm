// API for RFQ users

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.4
// source: service/rfq/user.proto

package proto

import (
	common "github.com/celer-network/rfq-mm/sdk/common"
	proto "github.com/celer-network/rfq-mm/sdk/service/rfqmm/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetConfigsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetConfigsRequest) Reset() {
	*x = GetConfigsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rfq_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigsRequest) ProtoMessage() {}

func (x *GetConfigsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_rfq_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigsRequest.ProtoReflect.Descriptor instead.
func (*GetConfigsRequest) Descriptor() ([]byte, []int) {
	return file_service_rfq_user_proto_rawDescGZIP(), []int{0}
}

type GetConfigsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractAddrs map[uint64]string `protobuf:"bytes,1,rep,name=contract_addrs,json=contractAddrs,proto3" json:"contract_addrs,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Tokens        []*common.Token   `protobuf:"bytes,2,rep,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *GetConfigsResponse) Reset() {
	*x = GetConfigsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rfq_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigsResponse) ProtoMessage() {}

func (x *GetConfigsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_rfq_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigsResponse.ProtoReflect.Descriptor instead.
func (*GetConfigsResponse) Descriptor() ([]byte, []int) {
	return file_service_rfq_user_proto_rawDescGZIP(), []int{1}
}

func (x *GetConfigsResponse) GetContractAddrs() map[uint64]string {
	if x != nil {
		return x.ContractAddrs
	}
	return nil
}

func (x *GetConfigsResponse) GetTokens() []*common.Token {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type PriceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcToken  *common.Token `protobuf:"bytes,1,opt,name=src_token,json=srcToken,proto3" json:"src_token,omitempty"`
	DstToken  *common.Token `protobuf:"bytes,2,opt,name=dst_token,json=dstToken,proto3" json:"dst_token,omitempty"`
	SrcAmount string        `protobuf:"bytes,3,opt,name=src_amount,json=srcAmount,proto3" json:"src_amount,omitempty"`
	DstAmount string        `protobuf:"bytes,4,opt,name=dst_amount,json=dstAmount,proto3" json:"dst_amount,omitempty"`
	// indicates whether the user wants native token on the dst chain (only applicable if the dst token is a native wrap)
	DstNative bool `protobuf:"varint,5,opt,name=dst_native,json=dstNative,proto3" json:"dst_native,omitempty"`
}

func (x *PriceRequest) Reset() {
	*x = PriceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rfq_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceRequest) ProtoMessage() {}

func (x *PriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_rfq_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceRequest.ProtoReflect.Descriptor instead.
func (*PriceRequest) Descriptor() ([]byte, []int) {
	return file_service_rfq_user_proto_rawDescGZIP(), []int{2}
}

func (x *PriceRequest) GetSrcToken() *common.Token {
	if x != nil {
		return x.SrcToken
	}
	return nil
}

func (x *PriceRequest) GetDstToken() *common.Token {
	if x != nil {
		return x.DstToken
	}
	return nil
}

func (x *PriceRequest) GetSrcAmount() string {
	if x != nil {
		return x.SrcAmount
	}
	return ""
}

func (x *PriceRequest) GetDstAmount() string {
	if x != nil {
		return x.DstAmount
	}
	return ""
}

func (x *PriceRequest) GetDstNative() bool {
	if x != nil {
		return x.DstNative
	}
	return false
}

type PriceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err   *common.Err  `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Price *proto.Price `protobuf:"bytes,2,opt,name=price,proto3" json:"price,omitempty"`
	// protocol fee + mm charged fee
	Fee      string `protobuf:"bytes,3,opt,name=fee,proto3" json:"fee,omitempty"`
	MmId     string `protobuf:"bytes,4,opt,name=mm_id,json=mmId,proto3" json:"mm_id,omitempty"`
	TxMsgFee string `protobuf:"bytes,5,opt,name=tx_msg_fee,json=txMsgFee,proto3" json:"tx_msg_fee,omitempty"` // to pay for msg fee
}

func (x *PriceResponse) Reset() {
	*x = PriceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rfq_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceResponse) ProtoMessage() {}

func (x *PriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_rfq_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceResponse.ProtoReflect.Descriptor instead.
func (*PriceResponse) Descriptor() ([]byte, []int) {
	return file_service_rfq_user_proto_rawDescGZIP(), []int{3}
}

func (x *PriceResponse) GetErr() *common.Err {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *PriceResponse) GetPrice() *proto.Price {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *PriceResponse) GetFee() string {
	if x != nil {
		return x.Fee
	}
	return ""
}

func (x *PriceResponse) GetMmId() string {
	if x != nil {
		return x.MmId
	}
	return ""
}

func (x *PriceResponse) GetTxMsgFee() string {
	if x != nil {
		return x.TxMsgFee
	}
	return ""
}

type QuoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price    *proto.Price `protobuf:"bytes,1,opt,name=price,proto3" json:"price,omitempty"`
	MmId     string       `protobuf:"bytes,2,opt,name=mm_id,json=mmId,proto3" json:"mm_id,omitempty"`
	Sender   string       `protobuf:"bytes,3,opt,name=sender,proto3" json:"sender,omitempty"`
	Receiver string       `protobuf:"bytes,4,opt,name=receiver,proto3" json:"receiver,omitempty"`
	RefundTo string       `protobuf:"bytes,5,opt,name=refund_to,json=refundTo,proto3" json:"refund_to,omitempty"`
	// unix epoch seconds
	// deadlines are defined by the user. if no deadline is specified when quoting,
	// default values will be supplied by the server.
	SrcDeadline int64 `protobuf:"varint,6,opt,name=src_deadline,json=srcDeadline,proto3" json:"src_deadline,omitempty"`
	DstDeadline int64 `protobuf:"varint,7,opt,name=dst_deadline,json=dstDeadline,proto3" json:"dst_deadline,omitempty"`
	// indicates whether the user wants to receive native token on the dst chain
	// (only applicable if the dst_token in price is a native wrap)
	DstNative bool `protobuf:"varint,8,opt,name=dst_native,json=dstNative,proto3" json:"dst_native,omitempty"`
	// indicates whether the user deposits native token or not
	SrcNative bool `protobuf:"varint,9,opt,name=src_native,json=srcNative,proto3" json:"src_native,omitempty"`
}

func (x *QuoteRequest) Reset() {
	*x = QuoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rfq_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteRequest) ProtoMessage() {}

func (x *QuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_rfq_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteRequest.ProtoReflect.Descriptor instead.
func (*QuoteRequest) Descriptor() ([]byte, []int) {
	return file_service_rfq_user_proto_rawDescGZIP(), []int{4}
}

func (x *QuoteRequest) GetPrice() *proto.Price {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *QuoteRequest) GetMmId() string {
	if x != nil {
		return x.MmId
	}
	return ""
}

func (x *QuoteRequest) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *QuoteRequest) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *QuoteRequest) GetRefundTo() string {
	if x != nil {
		return x.RefundTo
	}
	return ""
}

func (x *QuoteRequest) GetSrcDeadline() int64 {
	if x != nil {
		return x.SrcDeadline
	}
	return 0
}

func (x *QuoteRequest) GetDstDeadline() int64 {
	if x != nil {
		return x.DstDeadline
	}
	return 0
}

func (x *QuoteRequest) GetDstNative() bool {
	if x != nil {
		return x.DstNative
	}
	return false
}

func (x *QuoteRequest) GetSrcNative() bool {
	if x != nil {
		return x.SrcNative
	}
	return false
}

type QuoteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err              *common.Err  `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	SrcTokenUsdPrice float64      `protobuf:"fixed64,2,opt,name=src_token_usd_price,json=srcTokenUsdPrice,proto3" json:"src_token_usd_price,omitempty"`
	DstTokenUsdPrice float64      `protobuf:"fixed64,3,opt,name=dst_token_usd_price,json=dstTokenUsdPrice,proto3" json:"dst_token_usd_price,omitempty"`
	Quote            *proto.Quote `protobuf:"bytes,4,opt,name=quote,proto3" json:"quote,omitempty"`
}

func (x *QuoteResponse) Reset() {
	*x = QuoteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rfq_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteResponse) ProtoMessage() {}

func (x *QuoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_rfq_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteResponse.ProtoReflect.Descriptor instead.
func (*QuoteResponse) Descriptor() ([]byte, []int) {
	return file_service_rfq_user_proto_rawDescGZIP(), []int{5}
}

func (x *QuoteResponse) GetErr() *common.Err {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *QuoteResponse) GetSrcTokenUsdPrice() float64 {
	if x != nil {
		return x.SrcTokenUsdPrice
	}
	return 0
}

func (x *QuoteResponse) GetDstTokenUsdPrice() float64 {
	if x != nil {
		return x.DstTokenUsdPrice
	}
	return 0
}

func (x *QuoteResponse) GetQuote() *proto.Quote {
	if x != nil {
		return x.Quote
	}
	return nil
}

type GetHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// use empty string for first page
	NextPageToken string `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	PageSize      uint64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	UserAddr      string `protobuf:"bytes,3,opt,name=user_addr,json=userAddr,proto3" json:"user_addr,omitempty"`
}

func (x *GetHistoryRequest) Reset() {
	*x = GetHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rfq_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryRequest) ProtoMessage() {}

func (x *GetHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_rfq_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetHistoryRequest) Descriptor() ([]byte, []int) {
	return file_service_rfq_user_proto_rawDescGZIP(), []int{6}
}

func (x *GetHistoryRequest) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *GetHistoryRequest) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetHistoryRequest) GetUserAddr() string {
	if x != nil {
		return x.UserAddr
	}
	return ""
}

type GetHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*UserOrder `protobuf:"bytes,2,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *GetHistoryResponse) Reset() {
	*x = GetHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rfq_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryResponse) ProtoMessage() {}

func (x *GetHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_rfq_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetHistoryResponse) Descriptor() ([]byte, []int) {
	return file_service_rfq_user_proto_rawDescGZIP(), []int{7}
}

func (x *GetHistoryResponse) GetOrders() []*UserOrder {
	if x != nil {
		return x.Orders
	}
	return nil
}

type GetOrdersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuoteHashes []string `protobuf:"bytes,1,rep,name=quote_hashes,json=quoteHashes,proto3" json:"quote_hashes,omitempty"`
}

func (x *GetOrdersRequest) Reset() {
	*x = GetOrdersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rfq_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrdersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrdersRequest) ProtoMessage() {}

func (x *GetOrdersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_rfq_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrdersRequest.ProtoReflect.Descriptor instead.
func (*GetOrdersRequest) Descriptor() ([]byte, []int) {
	return file_service_rfq_user_proto_rawDescGZIP(), []int{8}
}

func (x *GetOrdersRequest) GetQuoteHashes() []string {
	if x != nil {
		return x.QuoteHashes
	}
	return nil
}

type GetOrdersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*UserOrder `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *GetOrdersResponse) Reset() {
	*x = GetOrdersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rfq_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrdersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrdersResponse) ProtoMessage() {}

func (x *GetOrdersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_rfq_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrdersResponse.ProtoReflect.Descriptor instead.
func (*GetOrdersResponse) Descriptor() ([]byte, []int) {
	return file_service_rfq_user_proto_rawDescGZIP(), []int{9}
}

func (x *GetOrdersResponse) GetOrders() []*UserOrder {
	if x != nil {
		return x.Orders
	}
	return nil
}

type GetMarketMakersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMarketMakersRequest) Reset() {
	*x = GetMarketMakersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rfq_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarketMakersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketMakersRequest) ProtoMessage() {}

func (x *GetMarketMakersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_rfq_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketMakersRequest.ProtoReflect.Descriptor instead.
func (*GetMarketMakersRequest) Descriptor() ([]byte, []int) {
	return file_service_rfq_user_proto_rawDescGZIP(), []int{10}
}

type GetMarketMakersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MarketMakers []*MarketMaker `protobuf:"bytes,1,rep,name=market_makers,json=marketMakers,proto3" json:"market_makers,omitempty"`
}

func (x *GetMarketMakersResponse) Reset() {
	*x = GetMarketMakersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rfq_user_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarketMakersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarketMakersResponse) ProtoMessage() {}

func (x *GetMarketMakersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_rfq_user_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarketMakersResponse.ProtoReflect.Descriptor instead.
func (*GetMarketMakersResponse) Descriptor() ([]byte, []int) {
	return file_service_rfq_user_proto_rawDescGZIP(), []int{11}
}

func (x *GetMarketMakersResponse) GetMarketMakers() []*MarketMaker {
	if x != nil {
		return x.MarketMakers
	}
	return nil
}

type GetRefundExecMsgCallDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuoteHash string `protobuf:"bytes,1,opt,name=quote_hash,json=quoteHash,proto3" json:"quote_hash,omitempty"`
}

func (x *GetRefundExecMsgCallDataRequest) Reset() {
	*x = GetRefundExecMsgCallDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rfq_user_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRefundExecMsgCallDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRefundExecMsgCallDataRequest) ProtoMessage() {}

func (x *GetRefundExecMsgCallDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_rfq_user_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRefundExecMsgCallDataRequest.ProtoReflect.Descriptor instead.
func (*GetRefundExecMsgCallDataRequest) Descriptor() ([]byte, []int) {
	return file_service_rfq_user_proto_rawDescGZIP(), []int{12}
}

func (x *GetRefundExecMsgCallDataRequest) GetQuoteHash() string {
	if x != nil {
		return x.QuoteHash
	}
	return ""
}

type GetRefundExecMsgCallDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecMsgCallData []byte       `protobuf:"bytes,1,opt,name=exec_msg_call_data,json=execMsgCallData,proto3" json:"exec_msg_call_data,omitempty"`
	Quote           *proto.Quote `protobuf:"bytes,2,opt,name=quote,proto3" json:"quote,omitempty"`
	// indicates whether the user deposits native token or not
	SrcNative bool `protobuf:"varint,3,opt,name=src_native,json=srcNative,proto3" json:"src_native,omitempty"`
}

func (x *GetRefundExecMsgCallDataResponse) Reset() {
	*x = GetRefundExecMsgCallDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rfq_user_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRefundExecMsgCallDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRefundExecMsgCallDataResponse) ProtoMessage() {}

func (x *GetRefundExecMsgCallDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_rfq_user_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRefundExecMsgCallDataResponse.ProtoReflect.Descriptor instead.
func (*GetRefundExecMsgCallDataResponse) Descriptor() ([]byte, []int) {
	return file_service_rfq_user_proto_rawDescGZIP(), []int{13}
}

func (x *GetRefundExecMsgCallDataResponse) GetExecMsgCallData() []byte {
	if x != nil {
		return x.ExecMsgCallData
	}
	return nil
}

func (x *GetRefundExecMsgCallDataResponse) GetQuote() *proto.Quote {
	if x != nil {
		return x.Quote
	}
	return nil
}

func (x *GetRefundExecMsgCallDataResponse) GetSrcNative() bool {
	if x != nil {
		return x.SrcNative
	}
	return false
}

var File_service_rfq_user_proto protoreflect.FileDescriptor

var file_service_rfq_user_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x72, 0x66, 0x71, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x72, 0x66, 0x71, 0x1a, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x72, 0x66, 0x71, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f,
	0x72, 0x66, 0x71, 0x6d, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0xd8, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0e, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x72, 0x66,
	0x71, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x1a, 0x40, 0x0a,
	0x12, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xc3, 0x01, 0x0a, 0x0c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2a, 0x0a, 0x09, 0x73, 0x72, 0x63, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x08, 0x73, 0x72, 0x63, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2a, 0x0a, 0x09,
	0x64, 0x73, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x08,
	0x64, 0x73, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x72, 0x63, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x72,
	0x63, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x73, 0x74, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x73, 0x74,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x73, 0x74, 0x5f, 0x6e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x64, 0x73, 0x74, 0x4e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x0d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72,
	0x72, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x2a, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x72, 0x66, 0x71, 0x6d, 0x6d, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x66, 0x65, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x6d, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6d, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x74, 0x78, 0x5f,
	0x6d, 0x73, 0x67, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x78, 0x4d, 0x73, 0x67, 0x46, 0x65, 0x65, 0x22, 0xa4, 0x02, 0x0a, 0x0c, 0x51, 0x75, 0x6f, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x72, 0x66, 0x71, 0x6d, 0x6d, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x6d, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x72,
	0x63, 0x5f, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x73, 0x72, 0x63, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x73, 0x74, 0x5f, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x73, 0x74, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x64, 0x73, 0x74, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x72, 0x63, 0x5f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x72, 0x63, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x22, 0xb8,
	0x01, 0x0a, 0x0d, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12,
	0x2d, 0x0a, 0x13, 0x73, 0x72, 0x63, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x75, 0x73, 0x64,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x73, 0x72,
	0x63, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x73, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2d,
	0x0a, 0x13, 0x64, 0x73, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x75, 0x73, 0x64, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x64, 0x73, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x73, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a,
	0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x72, 0x66, 0x71, 0x6d, 0x6d, 0x2e, 0x51, 0x75, 0x6f,
	0x74, 0x65, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x22, 0x75, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26,
	0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x22, 0x44, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x72, 0x66, 0x71, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x06,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x35, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x22, 0x43, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x72, 0x66, 0x71,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x22, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4d,
	0x61, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x58, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0d, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x5f, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x72, 0x66, 0x71, 0x2e, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x52, 0x0c, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x4d, 0x61, 0x6b, 0x65, 0x72, 0x73, 0x22, 0x40, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x45, 0x78, 0x65, 0x63, 0x4d, 0x73, 0x67, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x6f,
	0x74, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71,
	0x75, 0x6f, 0x74, 0x65, 0x48, 0x61, 0x73, 0x68, 0x22, 0x9a, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x45, 0x78, 0x65, 0x63, 0x4d, 0x73, 0x67, 0x43, 0x61, 0x6c,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a,
	0x12, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x6d, 0x73, 0x67, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x65, 0x78, 0x65, 0x63, 0x4d,
	0x73, 0x67, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x05, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x72, 0x66, 0x71, 0x6d, 0x6d, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52,
	0x05, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x72, 0x63, 0x5f, 0x6e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x72, 0x63, 0x4e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x32, 0xca, 0x04, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x41, 0x70,
	0x69, 0x12, 0x4d, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12,
	0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x72, 0x66, 0x71, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x72, 0x66, 0x71, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x72, 0x66, 0x71, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x72,
	0x66, 0x71, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x05, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x72, 0x66, 0x71, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x72,
	0x66, 0x71, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4a, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x72, 0x66, 0x71, 0x2e, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x72, 0x66, 0x71, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x72, 0x66, 0x71, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x72, 0x66, 0x71, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x23,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x72, 0x66, 0x71, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x72, 0x66,
	0x71, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4d, 0x61, 0x6b, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x18, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x45, 0x78, 0x65, 0x63, 0x4d, 0x73, 0x67, 0x43, 0x61, 0x6c,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x72, 0x66, 0x71, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x45, 0x78, 0x65,
	0x63, 0x4d, 0x73, 0x67, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x72, 0x66,
	0x71, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x45, 0x78, 0x65, 0x63, 0x4d,
	0x73, 0x67, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x2d, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x72,
	0x66, 0x71, 0x2d, 0x6d, 0x6d, 0x2f, 0x73, 0x64, 0x6b, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x72, 0x66, 0x71, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_service_rfq_user_proto_rawDescOnce sync.Once
	file_service_rfq_user_proto_rawDescData = file_service_rfq_user_proto_rawDesc
)

func file_service_rfq_user_proto_rawDescGZIP() []byte {
	file_service_rfq_user_proto_rawDescOnce.Do(func() {
		file_service_rfq_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_rfq_user_proto_rawDescData)
	})
	return file_service_rfq_user_proto_rawDescData
}

var file_service_rfq_user_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_service_rfq_user_proto_goTypes = []interface{}{
	(*GetConfigsRequest)(nil),                // 0: service.rfq.GetConfigsRequest
	(*GetConfigsResponse)(nil),               // 1: service.rfq.GetConfigsResponse
	(*PriceRequest)(nil),                     // 2: service.rfq.PriceRequest
	(*PriceResponse)(nil),                    // 3: service.rfq.PriceResponse
	(*QuoteRequest)(nil),                     // 4: service.rfq.QuoteRequest
	(*QuoteResponse)(nil),                    // 5: service.rfq.QuoteResponse
	(*GetHistoryRequest)(nil),                // 6: service.rfq.GetHistoryRequest
	(*GetHistoryResponse)(nil),               // 7: service.rfq.GetHistoryResponse
	(*GetOrdersRequest)(nil),                 // 8: service.rfq.GetOrdersRequest
	(*GetOrdersResponse)(nil),                // 9: service.rfq.GetOrdersResponse
	(*GetMarketMakersRequest)(nil),           // 10: service.rfq.GetMarketMakersRequest
	(*GetMarketMakersResponse)(nil),          // 11: service.rfq.GetMarketMakersResponse
	(*GetRefundExecMsgCallDataRequest)(nil),  // 12: service.rfq.GetRefundExecMsgCallDataRequest
	(*GetRefundExecMsgCallDataResponse)(nil), // 13: service.rfq.GetRefundExecMsgCallDataResponse
	nil,                                      // 14: service.rfq.GetConfigsResponse.ContractAddrsEntry
	(*common.Token)(nil),                     // 15: common.Token
	(*common.Err)(nil),                       // 16: common.Err
	(*proto.Price)(nil),                      // 17: service.rfqmm.Price
	(*proto.Quote)(nil),                      // 18: service.rfqmm.Quote
	(*UserOrder)(nil),                        // 19: service.rfq.UserOrder
	(*MarketMaker)(nil),                      // 20: service.rfq.MarketMaker
}
var file_service_rfq_user_proto_depIdxs = []int32{
	14, // 0: service.rfq.GetConfigsResponse.contract_addrs:type_name -> service.rfq.GetConfigsResponse.ContractAddrsEntry
	15, // 1: service.rfq.GetConfigsResponse.tokens:type_name -> common.Token
	15, // 2: service.rfq.PriceRequest.src_token:type_name -> common.Token
	15, // 3: service.rfq.PriceRequest.dst_token:type_name -> common.Token
	16, // 4: service.rfq.PriceResponse.err:type_name -> common.Err
	17, // 5: service.rfq.PriceResponse.price:type_name -> service.rfqmm.Price
	17, // 6: service.rfq.QuoteRequest.price:type_name -> service.rfqmm.Price
	16, // 7: service.rfq.QuoteResponse.err:type_name -> common.Err
	18, // 8: service.rfq.QuoteResponse.quote:type_name -> service.rfqmm.Quote
	19, // 9: service.rfq.GetHistoryResponse.orders:type_name -> service.rfq.UserOrder
	19, // 10: service.rfq.GetOrdersResponse.orders:type_name -> service.rfq.UserOrder
	20, // 11: service.rfq.GetMarketMakersResponse.market_makers:type_name -> service.rfq.MarketMaker
	18, // 12: service.rfq.GetRefundExecMsgCallDataResponse.quote:type_name -> service.rfqmm.Quote
	0,  // 13: service.rfq.UserApi.GetConfigs:input_type -> service.rfq.GetConfigsRequest
	2,  // 14: service.rfq.UserApi.Price:input_type -> service.rfq.PriceRequest
	4,  // 15: service.rfq.UserApi.Quote:input_type -> service.rfq.QuoteRequest
	8,  // 16: service.rfq.UserApi.GetOrders:input_type -> service.rfq.GetOrdersRequest
	6,  // 17: service.rfq.UserApi.GetHistory:input_type -> service.rfq.GetHistoryRequest
	10, // 18: service.rfq.UserApi.GetMarketMakers:input_type -> service.rfq.GetMarketMakersRequest
	12, // 19: service.rfq.UserApi.GetRefundExecMsgCallData:input_type -> service.rfq.GetRefundExecMsgCallDataRequest
	1,  // 20: service.rfq.UserApi.GetConfigs:output_type -> service.rfq.GetConfigsResponse
	3,  // 21: service.rfq.UserApi.Price:output_type -> service.rfq.PriceResponse
	5,  // 22: service.rfq.UserApi.Quote:output_type -> service.rfq.QuoteResponse
	9,  // 23: service.rfq.UserApi.GetOrders:output_type -> service.rfq.GetOrdersResponse
	7,  // 24: service.rfq.UserApi.GetHistory:output_type -> service.rfq.GetHistoryResponse
	11, // 25: service.rfq.UserApi.GetMarketMakers:output_type -> service.rfq.GetMarketMakersResponse
	13, // 26: service.rfq.UserApi.GetRefundExecMsgCallData:output_type -> service.rfq.GetRefundExecMsgCallDataResponse
	20, // [20:27] is the sub-list for method output_type
	13, // [13:20] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_service_rfq_user_proto_init() }
func file_service_rfq_user_proto_init() {
	if File_service_rfq_user_proto != nil {
		return
	}
	file_service_rfq_model_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_service_rfq_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_rfq_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_rfq_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_rfq_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_rfq_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_rfq_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuoteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_rfq_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_rfq_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_rfq_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrdersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_rfq_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrdersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_rfq_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarketMakersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_rfq_user_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarketMakersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_rfq_user_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRefundExecMsgCallDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_rfq_user_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRefundExecMsgCallDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_rfq_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_rfq_user_proto_goTypes,
		DependencyIndexes: file_service_rfq_user_proto_depIdxs,
		MessageInfos:      file_service_rfq_user_proto_msgTypes,
	}.Build()
	File_service_rfq_user_proto = out.File
	file_service_rfq_user_proto_rawDesc = nil
	file_service_rfq_user_proto_goTypes = nil
	file_service_rfq_user_proto_depIdxs = nil
}
