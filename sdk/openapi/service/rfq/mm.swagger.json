{
  "swagger": "2.0",
  "info": {
    "title": "service/rfq/mm.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "MMApi"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/mm/getPendingOrders": {
      "post": {
        "summary": "APIs for market makers. All rpc methods require API key authentication.",
        "operationId": "MMApi_PendingOrders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rfqPendingOrdersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rfqPendingOrdersRequest"
            }
          }
        ],
        "tags": [
          "MMApi"
        ]
      }
    },
    "/v1/mm/updateConfigs": {
      "post": {
        "operationId": "MMApi_UpdateConfigs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rfqUpdateConfigsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rfqUpdateConfigsRequest"
            }
          }
        ],
        "tags": [
          "MMApi"
        ]
      }
    },
    "/v1/mm/updateOrders": {
      "post": {
        "operationId": "MMApi_UpdateOrders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/rfqUpdateOrdersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/rfqUpdateOrdersRequest"
            }
          }
        ],
        "tags": [
          "MMApi"
        ]
      }
    }
  },
  "definitions": {
    "commonToken": {
      "type": "object",
      "properties": {
        "chainId": {
          "type": "string",
          "format": "uint64"
        },
        "symbol": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "decimals": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "logoUri": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rfqOrderStatus": {
      "type": "string",
      "enum": [
        "STATUS_PENDING",
        "STATUS_SRC_DEPOSITED",
        "STATUS_MM_REJECTED",
        "STATUS_MM_DST_EXECUTED",
        "STATUS_DST_TRANSFERRED",
        "STATUS_MM_SRC_EXECUTED",
        "STATUS_REFUND_INITIATED",
        "STATUS_SRC_RELEASED",
        "STATUS_REFUNDED"
      ],
      "default": "STATUS_PENDING",
      "title": "- STATUS_PENDING: an order first enters the pending status when an MM returns a firm quote upon a user's quote request.\n - STATUS_SRC_DEPOSITED: reached after the user's call to the RFQ contract to deposit funds\n - STATUS_MM_REJECTED: reached only if an MM actively calls back to the RFQ server to mark the order as rejected. once marked as rejected, \nthe same order will not appear in the PendingOrders() anymore.\nnote that MMs can choose to not implement this active call and hence this status will never be reached.\n - STATUS_MM_DST_EXECUTED: reached only if an MM actively calls back to the RFQ server to mark the order as dst executed\nwhen they finish submitting the tx on the dst chain to transfer fund to user.\nnote that MMs can choose to not implement this active call and hence this status will never be reached.\n - STATUS_DST_TRANSFERRED: this status marks the observation of the on-chain event DstTransferred\nthis also means that msg2 is on its way but not yet arrived on the src chain\nnote that to the user, when an order reaches this status, it can be considered completed\n - STATUS_MM_SRC_EXECUTED: reached only if an MM actively calls back to the RFQ server to mark the order as src executed\nwhen they finish submitting the tx on the src chain to release fund to MM.\nnote that MMs can choose to not implement this active call and hence this status will never be reached.\n - STATUS_REFUND_INITIATED: this status marks the observation of the on-chain event RefundInitiated upon msg1 execution\n - STATUS_SRC_RELEASED: this status marks the observation of the on-chain event SrcReleased upon msg2 execution\n - STATUS_REFUNDED: this status marks the observation of the on-chain event Refunded upon msg3 execution"
    },
    "rfqOrderUpdates": {
      "type": "object",
      "properties": {
        "quoteHash": {
          "type": "string"
        },
        "orderStatus": {
          "$ref": "#/definitions/rfqOrderStatus"
        },
        "execTxHash": {
          "type": "string"
        }
      }
    },
    "rfqPendingOrder": {
      "type": "object",
      "properties": {
        "quote": {
          "$ref": "#/definitions/rfqmmQuote"
        },
        "srcDepositTxHash": {
          "type": "string"
        },
        "dstNative": {
          "type": "boolean",
          "title": "indicates whether the user wants native token on the dst chain (only applicable if the dst token is a native wrap)"
        },
        "execMsgCallData": {
          "type": "string",
          "format": "byte",
          "title": "unix epoch seconds"
        },
        "quoteSig": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/rfqOrderStatus"
        }
      },
      "title": "for MM use"
    },
    "rfqPendingOrdersRequest": {
      "type": "object"
    },
    "rfqPendingOrdersResponse": {
      "type": "object",
      "properties": {
        "orders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rfqPendingOrder"
          }
        }
      }
    },
    "rfqUpdateConfigsRequest": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/rfqmmConfig"
        }
      }
    },
    "rfqUpdateConfigsResponse": {
      "type": "object"
    },
    "rfqUpdateOrdersRequest": {
      "type": "object",
      "properties": {
        "updates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/rfqOrderUpdates"
          }
        }
      }
    },
    "rfqUpdateOrdersResponse": {
      "type": "object"
    },
    "rfqmmConfig": {
      "type": "object",
      "properties": {
        "tokens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commonToken"
          }
        }
      }
    },
    "rfqmmQuote": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "title": "the quote hash"
        },
        "srcToken": {
          "$ref": "#/definitions/commonToken",
          "title": "the input token amount on the src chain"
        },
        "srcAmount": {
          "type": "string"
        },
        "srcReleaseAmount": {
          "type": "string",
          "title": "the token amount (same token as src_token) that the market maker will receive by filling this quote"
        },
        "dstToken": {
          "$ref": "#/definitions/commonToken",
          "title": "the token amount out on the dst chain to be received by the user"
        },
        "dstAmount": {
          "type": "string"
        },
        "srcDeadline": {
          "type": "string",
          "format": "int64",
          "title": "the deadline before which the user can submit on the src chain"
        },
        "dstDeadline": {
          "type": "string",
          "format": "int64",
          "title": "the time after which the order is eligible for refund"
        },
        "nonce": {
          "type": "string",
          "format": "uint64",
          "title": "nonce that is determined by the server that is used to dedup quotes"
        },
        "sender": {
          "type": "string",
          "title": "sender of the src tx (msg.sender). it's also the user who deposits the src fund"
        },
        "receiver": {
          "type": "string",
          "title": "the receiver of the token on the dst chain"
        },
        "refundTo": {
          "type": "string",
          "title": "the receiver of the refund (if any) on the src chain"
        },
        "mmAddr": {
          "type": "string",
          "title": "the address of the liquidity provider who's going to transfer fund to the user on the dst chain"
        }
      },
      "title": "some of the fields map to the Quote struct in the RFQ contract"
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
